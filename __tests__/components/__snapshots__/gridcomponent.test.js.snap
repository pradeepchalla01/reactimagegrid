exports[`Testing GridComp component renders and child component renders should render a GridComp component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}>
    <Panel
        bsClass="panel"
        bsStyle="default"
        defaultExpanded={false}
        header="Image Grid(N*N(Max 12 Columns with Bootstrap))">
        <Row
            bsClass="row"
            componentClass="div">
             
            <Col
                bsClass="col"
                componentClass="div"
                md={1}
                xs={12}>
                <ImageComp
                    path="https://screenshots.en.sftcdn.net/en/scrn/30000/30110/itunes-43-100x100.png" />
            </Col>
             
        </Row>
    </Panel>
</Grid>,
  "nodes": Array [
    <Grid
      bsClass="container"
      componentClass="div"
      fluid={false}>
      <Panel
            bsClass="panel"
            bsStyle="default"
            defaultExpanded={false}
            header="Image Grid(N*N(Max 12 Columns with Bootstrap))">
            <Row
                  bsClass="row"
                  componentClass="div">
                   
                  <Col
                        bsClass="col"
                        componentClass="div"
                        md={1}
                        xs={12}>
                        <ImageComp
                              path="https://screenshots.en.sftcdn.net/en/scrn/30000/30110/itunes-43-100x100.png" />
                  </Col>
                   
            </Row>
      </Panel>
</Grid>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <GridComp />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": GridComp {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": Object {
        "_currentElement": <Grid
          bsClass="container"
          componentClass="div"
          fluid={false}>
          <Panel
                    bsClass="panel"
                    bsStyle="default"
                    defaultExpanded={false}
                    header="Image Grid(N*N(Max 12 Columns with Bootstrap))">
                    <Row
                              bsClass="row"
                              componentClass="div">
                               
                              <Col
                                        bsClass="col"
                                        componentClass="div"
                                        md={1}
                                        xs={12}>
                                        <ImageComp
                                                  path="https://screenshots.en.sftcdn.net/en/scrn/30000/30110/itunes-43-100x100.png" />
                              </Col>
                               
                    </Row>
          </Panel>
</Grid>,
        "_debugID": 2,
        "_renderedOutput": <Grid
          bsClass="container"
          componentClass="div"
          fluid={false}>
          <Panel
                    bsClass="panel"
                    bsStyle="default"
                    defaultExpanded={false}
                    header="Image Grid(N*N(Max 12 Columns with Bootstrap))">
                    <Row
                              bsClass="row"
                              componentClass="div">
                               
                              <Col
                                        bsClass="col"
                                        componentClass="div"
                                        md={1}
                                        xs={12}>
                                        <ImageComp
                                                  path="https://screenshots.en.sftcdn.net/en/scrn/30000/30110/itunes-43-100x100.png" />
                              </Col>
                               
                    </Row>
          </Panel>
</Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <GridComp />,
}
`;

exports[`Testing GridComp component renders and child component renders should render a ImageComp component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Image
    bsClass="img"
    circle={false}
    responsive={true}
    rounded={false}
    src={undefined}
    thumbnail={false} />,
  "nodes": Array [
    <Image
      bsClass="img"
      circle={false}
      responsive={true}
      rounded={false}
      src={undefined}
      thumbnail={false} />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ImageComp />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ImageComp {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": Object {
        "_currentElement": <Image
          bsClass="img"
          circle={false}
          responsive={true}
          rounded={false}
          src={undefined}
          thumbnail={false} />,
        "_debugID": 4,
        "_renderedOutput": <Image
          bsClass="img"
          circle={false}
          responsive={true}
          rounded={false}
          src={undefined}
          thumbnail={false} />,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ImageComp />,
}
`;
